<!--
   build.xml file for SER422 Spring 2016
   Copyright 2016 Kevin A. Gary
-->

<project name="Task1" default="compile" basedir=".">
  <property file="build.properties"/>

  <!-- init target makes the directory structure. You may not
       require this if you set your environment up by hand. -->
  <target name="init">
    <tstamp/>
    <mkdir dir="lib"/>
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${javadoc.dir}"/>
    <mkdir dir="${properties.dir}"/>
  </target>

  <target name="core-compile">
    <javac
      srcdir="${src.dir}"
      destdir="${classes.dir}">
      <!-- Make sure you set your classpath! -->
      <classpath>
        <fileset dir="${lib.dir}" includes="*.jar"/>
        <fileset dir="${tomcat.home}-${port}/lib" includes="servlet-api.jar"/>
        <pathelement path="${classes.dir}" />
      </classpath>
    </javac>
  </target>

  <target name="compile" depends="init">
    <antcall target="core-compile">
      <param name="port" value="${tomcat.port1}"/>
    </antcall>
  </target>

  <target name="deploy">
    <antcall target="deploy-port1"/>
  </target>

  <target name="core-deploy">
    <echo message="Deploying to tomcat at ${tomcat.home}-${port}"/>
    <copy file="${dist.jar}" todir="${tomcat.home}-${port}/webapps" overwrite="yes"/>
  </target>

  <target name="deploy-port1" depends="dist">
    <antcall target="core-deploy">
      <param name="port" value="${tomcat.port1}"/>
    </antcall>
  </target>

  <target name="deploy-port2" depends="dist">
    <antcall target="core-deploy">
      <param name="port" value="${tomcat.port2}"/>
    </antcall>
  </target>

  
  <target name="build" depends="compile">
    <mkdir dir="${build.home}"/>
    <mkdir dir="${build.home}/WEB-INF"/>
    <copy todir="${build.home}/WEB-INF">
      <fileset dir="." includes="${classes.dir}/**,${lib.dir}/**" excludes="${classes.dir}/driver/**"/>
    </copy>
    <copy todir="${build.home}/WEB-INF/${classes.dir}">
      <fileset dir="${properties.dir}"/>
    </copy>
    <copy todir="${build.home}">
        <fileset dir="${resources.dir}"/>
    </copy>
    <copy file="web.xml" tofile="${build.home}/WEB-INF/web.xml"/>
  </target>
    
  <!-- This example dist target merely jars up the webapp files. -->
  <target name="dist" depends="build">
    <jar destfile="${dist.jar}" basedir="${build.home}">
    </jar>
  </target>


  <!-- Run javadoc on your java source code -->
  <target name="javadoc" depends="init">
    <javadoc packagenames="*"
             sourcepath="src/java"
             destdir="javadoc"
             author="true"
             version="true"
             windowtitle="Lab 2 APIs"
             doctitle="InClass"
             bottom="Copyright 2015 Kevin Gary" />
  </target>

  <!-- Clean -->
  <target name="clean">
    <delete file="${dist.jar}"/>
    <delete dir="${tomcat.home}-${tomcat.port1}/webapps/${app.name}"/>
    <delete dir="${tomcat.home}-${tomcat.port2}/webapps/${app.name}"/>
    <delete file="${tomcat.home}-${tomcat.port1}/webapps/${dist.jar}"/>
    <delete file="${tomcat.home}-${tomcat.port2}/webapps/${dist.jar}"/>
    <delete file="${tomcat.home}-${tomcat.port1}/webapps/${app.name}.war"/>
    <delete file="${tomcat.home}-${tomcat.port2}/webapps/${app.name}.war"/>
    <delete dir="${build.home}"/>
    <delete dir="${classes.dir}"/>
  </target>

  <!-- Clean all -->
  <target name="cleanall" depends="clean">
    <delete dir="${javadoc.dir}"/>
    <delete file="${submit.jar}"/>
  </target>

</project>
  

